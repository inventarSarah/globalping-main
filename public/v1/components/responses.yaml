components:
  responses:
    "400":
      description: If the API can't process the request due to malformed parameters or other client errors, the response returns the HTTP `400 BAD REQUEST` status code and a JSON response body with more information about the error.
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                description: Contains information about an error.
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                    description: The type of the error provided as one string value.
                  message:
                    type: string
                    description: The human-readable description of the error.
                  params:
                    type: object
                    description: Contains additional information.
                    additionalProperties:
                      type: string
          examples:
            json:
              value:
                error:
                  type: validation_error
                  message: Parameter validation failed.
                  params:
                    measurement: '\"measurement\" does not match any of the allowed types'
    "404":
      description: If the service can't find the requested resource, the response returns the HTTP `400 NOT FOUND` status code and a JSON response body containing more information about the error.
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                  message:
                    type: string
          examples:
            json:
              value:
                error:
                  type: not_found
                  message: Couldn't find the requested item.
    measurements422:
      description: If the API can't find suitable probes for your request, the response returns the HTTP `422 UNPROCESSABLE CONTENT` status code and a JSON response body with more information about the error. Please modify your request before trying again.
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                  message:
                    type: string
          examples:
            json:
              value:
                error:
                  type: no_probes_found
                  message: No suitable probes found.
    measurements429:
      description: If you've exceeded the API's rate limit, the response returns the status code `429 TOO MANY REQUEST` and a JSON response body containing more information about the error. Please review our [API rate limits](https://github.com/jsdelivr/globalping).
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                  message:
                    type: string
          examples:
            json:
              value:
                error:
                  type: rate_limit_exceeded
                  message: API rate limit exceeded.
    measurements202:
      description: If the API accepts the request for processing, the response returns the status code `202 ACCEPTED` and a JSON response body containing the ID of the newly created measurement. You can use the URL from the `Location` header as a link to view the measurement status.
      headers:
        Location:
          $ref: "headers.yaml#/components/headers/MeasurementLocation"
        X-RateLimit-Limit:
          $ref: "headers.yaml#/components/headers/RateLimitLimit"
        X-RateLimit-Remaining:
          $ref: "headers.yaml#/components/headers/RateLimitRemaining"
        X-RateLimit-Reset:
          $ref: "headers.yaml#/components/headers/RateLimitReset"
      content:
        application/json:
          schema:
            $ref: "schemas.yaml#/components/schemas/CreateMeasurementResponse"
          examples:
            "0":
              $ref: "examples.yaml#/components/examples/createMeasurementResponse"
    measurement200:
      description: A successful request returns the status code `200 OK` and a JSON response body containing the requested measurement results.
      content:
        application/json:
          schema:
            allOf:
              - $ref: "schemas.yaml#/components/schemas/MeasurementOptionsConditions"
              - $ref: "schemas.yaml#/components/schemas/MeasurementResultsConditions"
              - $ref: "schemas.yaml#/components/schemas/MeasurementResponse"
          examples:
            pingMeasurement:
              $ref: "examples.yaml#/components/examples/getPingMeasurementResponse"
            tracerouteMeasurement:
              $ref: "examples.yaml#/components/examples/getTracerouteMeasurementResponse"
            simpleDnsMeasurement:
              $ref: "examples.yaml#/components/examples/getSimpleDnsMeasurementResponse"
            traceDnsMeasurement:
              $ref: "examples.yaml#/components/examples/getTraceDnsMeasurementResponse"
            mtrMeasurement:
              $ref: "examples.yaml#/components/examples/getMtrMeasurementResponse"
            httpMeasurement:
              $ref: "examples.yaml#/components/examples/getHttpMeasurementResponse"
    probes200:
      description: A successful request returns the status code `200 OK` and a JSON response body containing a list of all currently online probes and their metadata.
      content:
        application/json:
          schema:
            $ref: "schemas.yaml#/components/schemas/Probes"
          examples:
            "0":
              $ref: "examples.yaml#/components/examples/probes"

components:
  schemas:
    AsnCode:
      type: integer
      description: An autonomous system number (ASN).
    CountryCode:
      type: string
      description: A two-letter country code based on [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Current_codes).
    ContinentCode:
      type: string
      description: A two-letter continent code.
      enum:
        - AF
        - AN
        - AS
        - EU
        - NA
        - OC
        - SA
    CityName:
      type: string
      description: A city name in English.
    CreateMeasurementResponse:
      description: Contains information about the newly created measurement request, such as its ID.
      type: object
      required:
        - id
        - probesCount
      properties:
        id:
          type: string
          description: |
            The identifier of the measurement. 
            > **Tip**: You can use the ID to create a new measurement request, reusing the same probes.
        probesCount:
          $ref: "schemas.yaml#/components/schemas/MeasurementProbesCount"
    Latitude:
      type: number
      description: The probe location's latitude.
    Longitude:
      type: number
      description: The probe location's longitude.
    MeasurementLimit:
      type: integer
      description: |
        The maximum number of probes that should run the measurement. The actual number of selected probes may vary, depending on their availability.
        This property is mutually exclusive with the `locations` object's `limit` property, meaning you can specify either a limit per location or a global limit in the root object of the request but not both.
      minimum: 1
      maximum: 500
      default: 1
    MeasurementLocationOption:
      type: object
      description: Contains location data that tells the API where to select the probes.
      additionalProperties: false
      properties:
        continent:
          $ref: "schemas.yaml#/components/schemas/ContinentCode"
        region:
          $ref: "schemas.yaml#/components/schemas/RegionName"
        country:
          $ref: "schemas.yaml#/components/schemas/CountryCode"
        state:
          $ref: "schemas.yaml#/components/schemas/StateCode"
        city:
          $ref: "schemas.yaml#/components/schemas/CityName"
        asn:
          $ref: "schemas.yaml#/components/schemas/AsnCode"
        network:
          $ref: "schemas.yaml#/components/schemas/NetworkName"
        tags:
          $ref: "schemas.yaml#/components/schemas/Tags"
        magic:
          type: string
          description: |
            The probe locations defined in a single string instead of using the respective location properties. The API fuzzy-matches the provided string based on the `country`, `city`, `state`, `continent`, `region`, `asn` (using `AS` prefix, e.g., `AS123`), `tags`, and `network` values. 
            You can specify the full names, ISO codes (if applicable), and common aliases. If you want to combine several conditions, use the `+` character.
        limit:
          type: integer
          description: |
            The maximum number of probes that should perform the measurement at this location. The actual number of selected probes may vary, depending on their availability.
            This property is mutually exclusive with the global `limit` property, meaning you can specify either a limit per location or a global limit in the root object of the request but not both.
          minimum: 1
          maximum: 200
          default: 1
    MeasurementLocations:
      oneOf:
        - type: array
          description: |
            An array of `location` objects from which to run the tests. Each object specifies a location using one or more properties, such as country, city, ASN, etc.
          items:
            $ref: "schemas.yaml#/components/schemas/MeasurementLocationOption"
        - type: string
          description: |
            The ID of a previous measurement whose probes you want to reuse in the same order. 
            You need to specify the measurement request's `type` and other properties again, as they're not automatically reused. 
            Also note that once the original measurement expires, any subsequent request using the expired ID returns a `422` error.
    MeasurementOptions:
      description: Contains additional request options that depend on the measurement `type` you want to run.
      anyOf:
        - $ref: "schemas.yaml#/components/schemas/MeasurementPingOptions"
        - $ref: "schemas.yaml#/components/schemas/MeasurementTracerouteOptions"
        - $ref: "schemas.yaml#/components/schemas/MeasurementDnsOptions"
        - $ref: "schemas.yaml#/components/schemas/MeasurementMtrOptions"
        - $ref: "schemas.yaml#/components/schemas/MeasurementHttpOptions"
    MeasurementOptionsConditions:
      allOf:
        - if:
            type: object
            properties:
              type:
                const: ping
          then:
            type: object
            properties:
              measurementOptions:
                $ref: "schemas.yaml#/components/schemas/MeasurementPingOptions"
        - if:
            type: object
            properties:
              type:
                const: traceroute
          then:
            type: object
            properties:
              measurementOptions:
                $ref: "schemas.yaml#/components/schemas/MeasurementTracerouteOptions"
        - if:
            type: object
            properties:
              type:
                const: dns
          then:
            type: object
            properties:
              measurementOptions:
                $ref: "schemas.yaml#/components/schemas/MeasurementDnsOptions"
        - if:
            type: object
            properties:
              type:
                const: mtr
          then:
            type: object
            properties:
              measurementOptions:
                $ref: "schemas.yaml#/components/schemas/MeasurementMtrOptions"
        - if:
            type: object
            properties:
              type:
                const: http
          then:
            type: object
            properties:
              measurementOptions:
                $ref: "schemas.yaml#/components/schemas/MeasurementHttpOptions"
    MeasurementResultsConditions:
      allOf:
        - if:
            type: object
            properties:
              type:
                const: ping
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished
          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: "schemas.yaml#/components/schemas/FinishedPingTestResult"
        - if:
            type: object
            properties:
              type:
                const: traceroute
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: "schemas.yaml#/components/schemas/FinishedTracerouteTestResult"
        - if:
            type: object
            properties:
              type:
                const: dns
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: "schemas.yaml#/components/schemas/FinishedDnsTestResult"
        - if:
            type: object
            properties:
              type:
                const: mtr
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: "schemas.yaml#/components/schemas/FinishedMtrTestResult"
        - if:
            type: object
            properties:
              type:
                const: http
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: "schemas.yaml#/components/schemas/FinishedHttpTestResult"
    MeasurementPingOptions:
      type: object
      title: PingOptions
      description: Contains additional configuration options for ping measurement requests.
      additionalProperties: false
      properties:
        packets:
          type: integer
          description: The number of packets to send.
          default: 3
          minimum: 1
          maximum: 16
    MeasurementTracerouteOptions:
      type: object
      title: TracerouteOptions
      description: Contains additional configuration options for traceroute measurement requests.
      additionalProperties: false
      properties:
        port:
          type: integer
          description: The destination port for the data packets.
          minimum: 0
          maximum: 65535
          default: 80
        protocol:
          type: string
          description: The transport protocol to use.
          enum:
            - ICMP
            - TCP
            - UDP
          default: ICMP
    MeasurementDnsOptions:
      type: object
      title: DnsOptions
      description: Contains additional configuration options for DNS measurement requests.
      additionalProperties: false
      properties:
        query:
          type: object
          description: The type of DNS query.
          additionalProperties: false
          properties:
            type:
              type: string
              enum:
                - A
                - AAAA
                - ANY
                - CNAME
                - DNSKEY
                - DS
                - MX
                - NS
                - NSEC
                - PTR
                - RRSIG
                - SOA
                - TXT
                - SRV
              default: A
        resolver:
          $ref: "schemas.yaml#/components/schemas/MeasurementResolver"
        port:
          type: integer
          description: The port number to send the query to.
          minimum: 0
          maximum: 65535
          default: 53
        protocol:
          type: string
          description: The protocol to use for the DNS query.
          enum:
            - TCP
            - UDP
          default: UDP
        trace:
          type: boolean
          description: Toggle delegation path tracing from the root servers down to the target domain name.
          default: false
    MeasurementMtrOptions:
      type: object
      title: MtrOptions
      description: Contains additional configuration options for mtr measurement requests.
      additionalProperties: false
      properties:
        port:
          type: integer
          description: The port number to use.
          minimum: 0
          maximum: 65535
          default: 80
        protocol:
          type: string
          description: The transport protocol to use.
          enum:
            - ICMP
            - TCP
            - UDP
          default: ICMP
        packets:
          type: integer
          description: The number of packets to send to each hop.
          default: 3
          minimum: 1
          maximum: 16
    MeasurementHttpOptions:
      type: object
      title: HttpOptions
      description: Contains additional configuration options for HTTP measurement requests.
      additionalProperties: false
      properties:
        request:
          type: object
          description: Contains the HTTP request properties to use.
          additionalProperties: false
          properties:
            host:
              type: string
              description: |
                The `Host` header to add to the request. The default value is based on the measurement request's `target`.
            path:
              type: string
              description: The URL pathname.
            query:
              type: string
              description: A query string to add to the request.
            method:
              type: string
              description: The HTTP method to use.
              enum:
                - HEAD
                - GET
              default: HEAD
            headers:
              type: object
              description: |
                Additional request headers to add to the request. The API uses the `Host` and `User-Agent` already internally and therefore overwrites them. 

                > **Note**: Use the `host` property in the same object to define the `Host` header.
              additionalProperties:
                type: string
        resolver:
          $ref: "schemas.yaml#/components/schemas/MeasurementResolver"
        port:
          type: integer
          description: The port number to use.
          minimum: 0
          maximum: 65535
          default: 80
        protocol:
          type: string
          description: The transport protocol to use.
          enum:
            - HTTP
            - HTTPS
            - HTTP2
          default: HTTPS
    MeasurementProbesCount:
      type: integer
      description: |
        The actual number of probes that performed the measurement tests. 
        The value can be smaller or equal to the `limit` defined in the measurement request, depending on probe availability.
    MeasurementResolver:
      description: A DNS resolver to use for the measurement. The default value is the probe's system resolver.
      anyOf:
        - type: string
          format: ipv4
          description: The IPv4 address of the resolver.
        - type: string
          format: hostname
          description: The Full Qualified Domain Name (FQDN) of the resolver.
    MeasurementResultItem:
      type: object
      description: Contains information about a probe and its test results.
      required:
        - probe
        - result
      properties:
        probe:
          allOf:
            - $ref: "schemas.yaml#/components/schemas/ProbeLocation"
            - type: object
              description: Contains information about the probe that performed the test, such as its location, tags, and resolvers.
              required:
                - tags
                - resolvers
              properties:
                tags:
                  $ref: "schemas.yaml#/components/schemas/Tags"
                resolvers:
                  $ref: "schemas.yaml#/components/schemas/ProbeResolvers"
        result:
          $ref: "schemas.yaml#/components/schemas/TestResult"
    MeasurementStatus:
      type: string
      description: The measurement request's current status. Any value other than `in-progress` is final, meaning the measurement request is no longer running.
      enum:
        - in-progress
        - finished
    MeasurementTarget:
      type: string
      description: |
        A publicly reachable target. 
        This is usually a hostname or an IPv4 address, depending on the defined `type`.
    MeasurementType:
      type: string
      description: The measurement's test type.
      enum:
        - ping
        - traceroute
        - dns
        - mtr
        - http
    MeasurementRequest:
      description: Contains all the required data to create a measurement request.
      externalDocs:
        description: Read our best practises on GitHub.
        url: https://github.com/jsdelivr/globalping
      allOf:
        - $ref: "schemas.yaml#/components/schemas/MeasurementOptionsConditions"
        - type: object
          additionalProperties: false
          required:
            - type
            - target
          properties:
            type:
              $ref: "schemas.yaml#/components/schemas/MeasurementType"
            target:
              $ref: "schemas.yaml#/components/schemas/MeasurementTarget"
            inProgressUpdates:
              type: boolean
              description: |
                Indicates whether you want to be able to get partial results while the measurement is still running:
                - if `true`, the API returns partial results as soon as they are available. For example, this is handy if you want to present data to the user in real time. Note that you can only get real-time updates for the first five tests in the `results` array.
                - if `false`, the API doesn't populate the `results` array in the response until the measurement is complete
              default: false
            locations:
              $ref: "schemas.yaml#/components/schemas/MeasurementLocations"
            limit:
              $ref: "schemas.yaml#/components/schemas/MeasurementLimit"
            measurementOptions:
              $ref: "schemas.yaml#/components/schemas/MeasurementOptions"
    MeasurementResponse:
      type: object
      description: Contains your measurement request's response including probe details and test results.
      required:
        - id
        - type
        - status
        - createdAt
        - updatedAt
        - target
        - probesCount
        - results
      properties:
        id:
          type: string
          description: The identifier of the measurement.
        type:
          $ref: "schemas.yaml#/components/schemas/MeasurementType"
        target:
          $ref: "schemas.yaml#/components/schemas/MeasurementTarget"
        status:
          $ref: "schemas.yaml#/components/schemas/MeasurementStatus"
        createdAt:
          type: string
          format: date-time
          description: The date and time at which the API created the measurement.
        updatedAt:
          type: string
          format: date-time
          description: The date and time at which the AP last updated the measurement.
        probesCount:
          $ref: "schemas.yaml#/components/schemas/MeasurementProbesCount"
        locations:
          allOf:
            - $ref: "schemas.yaml#/components/schemas/MeasurementLocations"
            - description: Contains the location data you specified when creating the measurement request.
        limit:
          allOf:
            - $ref: "schemas.yaml#/components/schemas/MeasurementLimit"
            - description: The limit you specified when creating the request, if it differs from the default value. Is not part of the response if you have specified limits per location.
        measurementOptions:
          allOf:
            - $ref: "schemas.yaml#/components/schemas/MeasurementOptions"
            - description: Contains the custom options you provided when creating the measurement request, if they differ from the default configuration.
        results:
          type: array
          description: An array containing the measurement's results.
          items:
            $ref: "schemas.yaml#/components/schemas/MeasurementResultItem"
    NetworkName:
      type: string
      description: A network name, such as "Google LLC" or "DigitalOcen, LLC".
    NullableInteger:
      type:
        - integer
        - "null"
    NullableNumber:
      type:
        - number
        - "null"
    Probe:
      type: object
      description: Contains information about a probe.
      required:
        - version
        - location
        - tags
        - resolvers
      properties:
        version:
          type: string
          description: The probe's version.
        location:
          $ref: "schemas.yaml#/components/schemas/ProbeLocation"
        tags:
          $ref: "schemas.yaml#/components/schemas/Tags"
        resolvers:
          $ref: "schemas.yaml#/components/schemas/ProbeResolvers"
    ProbeLocation:
      type: object
      description: Contains a probe's location information.
      required:
        - continent
        - region
        - country
        - state
        - city
        - asn
        - network
        - latitude
        - longitude
      properties:
        continent:
          $ref: "schemas.yaml#/components/schemas/ContinentCode"
        region:
          $ref: "schemas.yaml#/components/schemas/RegionName"
        country:
          $ref: "schemas.yaml#/components/schemas/CountryCode"
        state:
          $ref: "schemas.yaml#/components/schemas/StateCode"
        city:
          $ref: "schemas.yaml#/components/schemas/CityName"
        asn:
          $ref: "schemas.yaml#/components/schemas/AsnCode"
        network:
          $ref: "schemas.yaml#/components/schemas/NetworkName"
        latitude:
          $ref: "schemas.yaml#/components/schemas/Latitude"
        longitude:
          $ref: "schemas.yaml#/components/schemas/Longitude"
    ProbeResolver:
      description: A resolver defined in the probe.
      anyOf:
        - type: string
          format: ipv4
          description: The IPv4 address of the resolver.
        - type: string
          const: private
          description: Indicates that the resolver points to a private IP address.
    ProbeResolvers:
      type: array
      description: An array of the default resolvers configured in the probe.
      items:
        $ref: "schemas.yaml#/components/schemas/ProbeResolver"
    Probes:
      type: array
      description: An array containing information about each probe.
      items:
        $ref: "schemas.yaml#/components/schemas/Probe"
    RegionName:
      type: string
      description: |
        A geographic region name based on the UN standard ["Standard Country or Area Codes for Statistical Use (M49)"](https://unstats.un.org/unsd/methodology/m49/).
      enum:
        - Northern Africa
        - Eastern Africa
        - Middle Africa
        - Southern Africa
        - Western Africa

        - Caribbean
        - Central America
        - South America
        - Northern America

        - Central Asia
        - Eastern Asia
        - South-eastern Asia
        - Southern Asia
        - Western Asia

        - Eastern Europe
        - Northern Europe
        - Southern Europe
        - Western Europe

        - Australia and New Zealand
        - Melanesia
        - Micronesia
        - Polynesia
    ResolvedAddress:
      type: string
      description: The resolved IP address of the `target`.
    ResolvedHostname:
      type:
        - string
        - "null"
      format: hostname
      description: The resolved hostname of the `target`.
    StateCode:
      type:
        - string
        - "null"
      description: A two-letter [US state code](https://www.faa.gov/air_traffic/publications/atpubs/cnt_html/appendix_a.html).
    StatsRttMin:
      type: number
      description: The lowest round-trip time value.
    StatsRttMinNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableNumber"
        - description: The lowest round-trip time value.
    StatsRttAvg:
      type: number
      description: The average round-trip time value.
    StatsRttAvgNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableNumber"
        - description: The average round-trip time value.
    StatsRttMax:
      type: number
      description: The highest round-trip time value.
    StatsRttMaxNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableNumber"
        - description: The highest round-trip time value.
    StatsPacketsTotal:
      type: integer
      description: The number of packets sent.
    StatsPacketsRcv:
      type: integer
      description: The number of received packets.
    StatsPacketsDrop:
      type: integer
      description: The number of dropped packets (`total` - `rcv`).
    StatsPacketsLoss:
      type: number
      description: The percentage of dropped packets.
    StatsJitterMin:
      type: number
      description: The lowest jitter value.
    StatsJitterAvg:
      type: number
      description: The average jitter value.
    StatsJitterMax:
      type: number
      description: The highest jitter value.
    StatsStDev:
      type: number
      description: The standard deviation of the  round-trip time values.
    Tags:
      type: array
      description: |
        An array of additional values to fine-tune probe selection:
        - Probes hosted in [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions) and [Google Cloud](https://cloud.google.com/compute/docs/regions-zones#available) are automatically assigned the service region code and are prefixed with their name. For example: `aws-eu-west-1` and `gcp-us-south1` 
        - Probes are automatically assigned `datacenter-network` and `eyeball-network` tags to distinguish between probes hosted in datacenter and end-user locations.
      items:
        type: string
    TestResult:
      description: Contains a test's result data.
      anyOf:
        - $ref: "schemas.yaml#/components/schemas/InProgressTestResult"
        - $ref: "schemas.yaml#/components/schemas/FailedTestResult"
        - $ref: "schemas.yaml#/components/schemas/OfflineTestResult"
        - $ref: "schemas.yaml#/components/schemas/FinishedPingTestResult"
        - $ref: "schemas.yaml#/components/schemas/FinishedTracerouteTestResult"
        - $ref: "schemas.yaml#/components/schemas/FinishedDnsTestResult"
        - $ref: "schemas.yaml#/components/schemas/FinishedMtrTestResult"
        - $ref: "schemas.yaml#/components/schemas/FinishedHttpTestResult"
    BaseFinishedTestResult:
      type: object
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: "schemas.yaml#/components/schemas/FinishedTestStatus"
        rawOutput:
          $ref: "schemas.yaml#/components/schemas/TestRawOutput"
    InProgressTestResult:
      type: object
      title: InProgressTestResult
      description: |
        Contains information about a test that has the test status `in-progress`. 
        Note that most of the response fields are not available.
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: "schemas.yaml#/components/schemas/InProgressTestStatus"
        rawOutput:
          $ref: "schemas.yaml#/components/schemas/TestRawOutput"
    FailedTestResult:
      type: object
      title: FailedTestResult
      description: |
        Contains information about a test that has the status `failed`. 
        Note that most of the response fields are not available.
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: "schemas.yaml#/components/schemas/FailedTestStatus"
        rawOutput:
          $ref: "schemas.yaml#/components/schemas/TestRawOutput"
    OfflineTestResult:
      type: object
      title: OfflineTestResult
      description: |
        Contains information about a test that has the status `offline`, meaning the requested probe is not available to run the test. 
        Note that most of the response fields are not available. 
        > **Note:** This is only possible if you pass the ID of one of your existing measurements to the `locations` property of a new measurement request.
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: "schemas.yaml#/components/schemas/OfflineTestStatus"
        rawOutput:
          $ref: "schemas.yaml#/components/schemas/TestRawOutput"
    FinishedPingTestResult:
      title: FinishedPingTestResult
      description: Contains the results for a ping test.
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseFinishedTestResult"
        - type: object
          required:
            - resolvedAddress
            - resolvedHostname
            - stats
            - timings
          properties:
            resolvedAddress:
              $ref: "schemas.yaml#/components/schemas/ResolvedAddress"
            resolvedHostname:
              $ref: "schemas.yaml#/components/schemas/ResolvedHostname"
            stats:
              type: object
              description: |
                Contains the summarized statistics of the round-trip times (RTT) and packet losses of the test. 
                All times are given in milliseconds.
              required:
                - min
                - avg
                - max
                - total
                - rcv
                - drop
                - loss
              properties:
                min:
                  $ref: "schemas.yaml#/components/schemas/StatsRttMinNullable"
                avg:
                  $ref: "schemas.yaml#/components/schemas/StatsRttAvgNullable"
                max:
                  $ref: "schemas.yaml#/components/schemas/StatsRttMaxNullable"
                total:
                  $ref: "schemas.yaml#/components/schemas/StatsPacketsTotal"
                rcv:
                  $ref: "schemas.yaml#/components/schemas/StatsPacketsRcv"
                drop:
                  $ref: "schemas.yaml#/components/schemas/StatsPacketsDrop"
                loss:
                  $ref: "schemas.yaml#/components/schemas/StatsPacketsLoss"
            timings:
              type: array
              description: |
                An array containing timing data for each packet the test sent. 
                All times are given in milliseconds.
              items:
                type: object
                required:
                  - rtt
                  - ttl
                properties:
                  rtt:
                    $ref: "schemas.yaml#/components/schemas/TimingPacketRtt"
                  ttl:
                    $ref: "schemas.yaml#/components/schemas/TimingPacketTtl"
    FinishedTracerouteTestResult:
      title: FinishedTracerouteTestResult
      description: Contains the results for a traceroute test.
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseFinishedTestResult"
        - type: object
          required:
            - resolvedAddress
            - resolvedHostname
            - hops
          properties:
            resolvedAddress:
              $ref: "schemas.yaml#/components/schemas/ResolvedAddress"
            resolvedHostname:
              $ref: "schemas.yaml#/components/schemas/ResolvedHostname"
            hops:
              type: array
              description: An array containing details about each hop.
              items:
                type: object
                required:
                  - resolvedAddress
                  - resolvedHostname
                  - timings
                properties:
                  resolvedAddress:
                    $ref: "schemas.yaml#/components/schemas/ResolvedAddress"
                  resolvedHostname:
                    $ref: "schemas.yaml#/components/schemas/ResolvedHostname"
                  timings:
                    type: array
                    description: |
                      An array containing timing data for each packet the test sent. 
                      All times are given in milliseconds.
                    items:
                      type: object
                      required:
                        - rtt
                      properties:
                        rtt:
                          $ref: "schemas.yaml#/components/schemas/TimingPacketRtt"
    FinishedDnsTestResult:
      title: FinishedDnsTestResult
      description: Contains the results for a DNS test.
      anyOf:
        - $ref: "schemas.yaml#/components/schemas/FinishedSimpleDnsTestResult"
        - $ref: "schemas.yaml#/components/schemas/FinishedTraceDnsTestResult"
    DnsStatusCode:
      type: integer
      description: The DNS [response code](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#table-dns-parameters-6).
    DnsStatusCodeName:
      type: string
      description: The DNS [response code name](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#table-dns-parameters-6).
    HttpStatusCode:
      type: integer
      description: The HTTP response status code.
    HttpStatusCodeName:
      type: string
      description: The HTTP response status code name.
    FinishedSimpleDnsTestResult:
      title: FinishedSimpleDnsTestResult
      description: Contains the results for a DNS test with `trace` disabled.
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseFinishedTestResult"
        - type: object
          required:
            - statusCode
            - statusCodeName
          properties:
            statusCode:
              $ref: "schemas.yaml#/components/schemas/DnsStatusCode"
            statusCodeName:
              $ref: "schemas.yaml#/components/schemas/DnsStatusCodeName"
        - $ref: "schemas.yaml#/components/schemas/DnsTestHopResult"
    FinishedTraceDnsTestResult:
      title: FinishedTraceDnsTestResult
      description: Contains the results for a DNS test with `trace` enabled.
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseFinishedTestResult"
        - type: object
          required:
            - hops
          properties:
            hops:
              type: array
              description: An array containing details about each hop.
              items:
                $ref: "schemas.yaml#/components/schemas/DnsTestHopResult"
    DnsTestHopResult:
      type: object
      required:
        - resolver
        - answers
        - timings
      properties:
        resolver:
          type: string
          description: The hostname or IP of the resolver that answered the query.
        answers:
          type: array
          description: An array of received resource records.
          items:
            $ref: "schemas.yaml#/components/schemas/DnsTestAnswer"
        timings:
          type: object
          description: |
            Contains details about the query times. 
            Times are given in milliseconds.
          required:
            - total
          properties:
            total:
              type: number
              description: The total query time.
    DnsTestAnswer:
      type: object
      description: Contains the results from the `Answers` section of the DNS response message.
      required:
        - name
        - type
        - ttl
        - class
        - value
      properties:
        name:
          type: string
          description: The record's domain name.
        type:
          type: string
          description: The record's type.
        ttl:
          type: integer
          description: The record's time to live value in seconds.
        class:
          type: string
          description: The record's class.
        value:
          type: string
          description: The record's value.
    FinishedMtrTestResult:
      title: FinishedMtrTestResult
      description: Contains the results for a mtr test.
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseFinishedTestResult"
        - type: object
          required:
            - resolvedAddress
            - resolvedHostname
            - hops
          properties:
            resolvedAddress:
              $ref: "schemas.yaml#/components/schemas/ResolvedAddress"
            resolvedHostname:
              $ref: "schemas.yaml#/components/schemas/ResolvedHostname"
            hops:
              type: array
              description: An array containing details about each hop.
              items:
                type: object
                required:
                  - resolvedAddress
                  - resolvedHostname
                  - asn
                  - timings
                  - stats
                properties:
                  resolvedAddress:
                    allOf:
                      - $ref: "schemas.yaml#/components/schemas/ResolvedAddress"
                      - description: The resolved IP address of this hop.
                  resolvedHostname:
                    allOf:
                      - $ref: "schemas.yaml#/components/schemas/ResolvedHostname"
                      - description: The resolved hostname of this hop.
                  asn:
                    type: array
                    description: An array containing the ASNs assigned to this hop.
                    items:
                      type: integer
                  stats:
                    type: object
                    description: |
                      Contains the summarized statistics of the round-trip times (RTT) and packet losses of the hop. 
                      All times are given in milliseconds.
                    required:
                      - min
                      - avg
                      - max
                      - stDev
                      - jMin
                      - jAvg
                      - jMax
                      - total
                      - rcv
                      - drop
                      - loss
                    properties:
                      min:
                        $ref: "schemas.yaml#/components/schemas/StatsRttMin"
                      avg:
                        $ref: "schemas.yaml#/components/schemas/StatsRttAvg"
                      max:
                        $ref: "schemas.yaml#/components/schemas/StatsRttMax"
                      stDev:
                        $ref: "schemas.yaml#/components/schemas/StatsStDev"
                      jMin:
                        $ref: "schemas.yaml#/components/schemas/StatsJitterMin"
                      jAvg:
                        $ref: "schemas.yaml#/components/schemas/StatsJitterAvg"
                      jMax:
                        $ref: "schemas.yaml#/components/schemas/StatsJitterMax"
                      total:
                        $ref: "schemas.yaml#/components/schemas/StatsPacketsTotal"
                      rcv:
                        $ref: "schemas.yaml#/components/schemas/StatsPacketsRcv"
                      drop:
                        $ref: "schemas.yaml#/components/schemas/StatsPacketsDrop"
                      loss:
                        $ref: "schemas.yaml#/components/schemas/StatsPacketsLoss"
                  timings:
                    type: array
                    description: |
                      An array containing timing data for each packet the test sent. 
                      All times are in milliseconds.
                    items:
                      type: object
                      required:
                        - rtt
                      properties:
                        rtt:
                          $ref: "schemas.yaml#/components/schemas/TimingPacketRtt"
    FinishedHttpTestResult:
      title: FinishedHttpTestResult
      description: Contains the results for a HTTP test.
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseFinishedTestResult"
        - type: object
          required:
            - rawHeaders
            - rawBody
            - truncated
            - headers
            - resolvedAddress
            - statusCode
            - statusCodeName
            - timings
            - tls
          properties:
            rawHeaders:
              type: string
              description: The raw HTTP response headers.
            rawBody:
              type: string
              description: |
                The raw HTTP response body. 
                Note that the API only returns the first 10kb.
            truncated:
              type: boolean
              description: |
                Indicates whether the `rawBody` value was truncated due to being too big.
            headers:
              type: object
              description: Contains the HTTP response headers.
              additionalProperties:
                type: string
            statusCode:
              $ref: "schemas.yaml#/components/schemas/HttpStatusCode"
            statusCodeName:
              $ref: "schemas.yaml#/components/schemas/HttpStatusCodeName"
            resolvedAddress:
              $ref: "schemas.yaml#/components/schemas/ResolvedAddress"
            timings:
              type: object
              description: |
                Contains details about the HTTP request times. 
                Times are given in milliseconds.
              required:
                - total
                - dns
                - tcp
                - tls
                - firstByte
                - download
              properties:
                total:
                  $ref: "schemas.yaml#/components/schemas/TimingHttpTotalNullable"
                dns:
                  $ref: "schemas.yaml#/components/schemas/TimingHttpDnsNullable"
                tcp:
                  $ref: "schemas.yaml#/components/schemas/TimingHttpTcpNullable"
                tls:
                  $ref: "schemas.yaml#/components/schemas/TimingHttpTlsNullable"
                firstByte:
                  $ref: "schemas.yaml#/components/schemas/TimingHttpFirstByteNullable"
                download:
                  $ref: "schemas.yaml#/components/schemas/TimingHttpDownloadNullable"
            tls:
              description: Contains information about the TLS certificate. Is `null` if no TLS certificate is available.
              oneOf:
                - $ref: "schemas.yaml#/components/schemas/TlsCertificate"
                - type: "null"
    TestRawOutput:
      type: string
      description: |
        The raw output of a measurement's test result. For example, you can use the output to display it to users. 
        However, don't parse the content of this property and instead use the individual values provided in other properties of the measurement's test result.
    BaseTestStatus:
      type: string
      description: The measurement request's current status. Any value other than `in-progress` is final, meaning the measurement request is no longer running.
    InProgressTestStatus:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseTestStatus"
        - const: in-progress
    FinishedTestStatus:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseTestStatus"
        - const: finished
    FailedTestStatus:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseTestStatus"
        - const: failed
    OfflineTestStatus:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/BaseTestStatus"
        - const: offline
    TimingPacketRtt:
      type: number
      description: The round-trip time for this packet.
    TimingPacketTtl:
      type: number
      description: The time-to-live value of this packet.
    TimingHttpTotalNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableInteger"
        - description: The total HTTP request time.
    TimingHttpDnsNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableInteger"
        - description: The time required to perform the DNS lookup.
    TimingHttpTcpNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableInteger"
        - description: The time from performing the DNS lookup to establishing the TCP connection.
    TimingHttpTlsNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableInteger"
        - description: The time from establishing the TCP connection to establishing the TLS session.
    TimingHttpFirstByteNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableInteger"
        - description: The time from establishing the TCP/TLS connection to the first response byte.
    TimingHttpDownloadNullable:
      allOf:
        - $ref: "schemas.yaml#/components/schemas/NullableInteger"
        - description: The time from the first response byte to downloading the entire response.
    TlsCertificate:
      type: object
      description: Contains information about a TLS certificate.
      required:
        - authorized
        - createdAt
        - expiresAt
        - subject
        - issuer
      properties:
        authorized:
          type: boolean
          description: |
            Indicates whether a trusted authority signed the certificate.
        error:
          type: string
          description: |
            The reason why the certificate was rejected if `authorized` is `false`.
        createdAt:
          type: string
          description: The creation date and time of the certificate.
          format: date-time
        expiresAt:
          type: string
          description: The expiration date and time of the certificate.
          format: date-time
        subject:
          $ref: "schemas.yaml#/components/schemas/TlsCertificateSubject"
        issuer:
          $ref: "schemas.yaml#/components/schemas/TlsCertificateIssuer"
    TlsCertificateIssuer:
      type: object
      description: Contains information about the TLS certificate's issuer.
      required:
        - C
        - O
        - CN
      properties:
        C:
          type: string
          description: The issuer's country.
        O:
          type: string
          description: The issuer's organization.
        CN:
          type: string
          description: The issuer's common name.
    TlsCertificateSubject:
      type: object
      description: Contains information about the TLS certificate's subject.
      required:
        - CN
        - alt
      properties:
        CN:
          type: string
          description: The subject's common name.
        alt:
          type: string
          description: The subject's alternate names.
